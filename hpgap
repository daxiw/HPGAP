#!/usr/bin/perl
use strict;
use warnings;
use File::Basename;
use File::Path qw(make_path);
use YAML::Tiny;
use Cwd qw(getcwd abs_path);
use FindBin '$Bin';
use lib "$Bin/lib";
#use lib '/root/miniconda3/lib/site_perl/5.26.2';
#use PopGenome;

my $run = shift or die ("Error in command line arguments\n");
my @args = @ARGV;

#-----
#	PopGenome_Indexing::INDEXING($allcfg,$skipsh) if ($run eq 'step0_indexing');

#	PopGenome_Data_Filtering::DATA_FILTERING($allcfg,$skipsh) if ($run eq 'read_filtering');

if ($run eq 'preparecfg') {
		require PopGenome_Preparecfg;
		PopGenome_Preparecfg::Main(\@args);
}elsif ($run eq 'steps') {
		require PopGenome_arrange;
		PopGenome_arrange::ARRANGE(\@args);
}
elsif ($run eq 'read_filtering') {
		require PopGenome_Data_Filtering;
		PopGenome_Data_Filtering::Main(\@args);
}
elsif ($run eq 'read_mapping') {
		require PopGenome_Mapping;
		PopGenome_Mapping::Main(\@args);
}
elsif ($run eq 'read_report') {
		require PopGenome_Read_Report;
		PopGeome_Read_Report::Main(\@args);
}
elsif ($run eq 'variant_calling') {
		require PopGenome_Variant_Calling;
		PopGenome_Variant_Calling::Main(\@args);
}
elsif ($run eq 'mtgenome') {
		require PopGenome_Mtgenome;
		PopGenome_Mtgenome::Main(\@args);
}
elsif ($run eq 'variant_filtering') {
		require PopGenome_Variant_Filtering;
		PopGenome_Variant_Filtering::Main(\@args);
}
elsif ($run eq 'genetic_relationship') {
		require PopGenome_Genetic_Relationship;
		PopGenome_Genetic_Relationship::Main(\@args);
}
elsif ($run eq 'homozygosity') {
		require PopGenome_Homozygosity;
		PopGenome_Homozygosity::Main(\@args);
}
elsif ($run eq 'slidingwindow') {
		require PopGenome_Slidingwindow;
		PopGenome_Slidingwindow::Main(\@args);
}
elsif ($run eq 'test') {
		require PopGenome_test;
		PopGenome_test::TEST(\@args);
}
else {
	&usage;
	exit;
}


#----------------------------------- usage sub progamm ------------------------------------------

sub usage{
	print STDERR <<USAGE;

Description
	For Popolation genetic analysis in helminths.

Version 
	06 Feb 2019: Version v1.1.0

Author
	Daxi Wang
	email: darcywdx\@gmail.com
	please contact me if you find any bug.
							   	
Usage: hpgap <command> [options]

Commands:
  -- Configuration setting   
     preparecfg				setting configuration files
  
  -- Quality control
     read_filtering		
     read_mapping
     read_report

  -- Mt genome analysis
     mtgenome

  -- Variant calling on nuclear genomes
     variant_calling
     combine_calling
     variant_filtering

  -- Relatedness
     relatedness
     phylogeny
	 admixture

  -- Genome profiling
     homozygosity
	 roh
	 ld
	 slidingwindow
	 sfs

Note 
	1. No symbolic link to the files outside the mounted volume, which means all the data files themselves should be located within the mounted volume.
	2. For each pair of fastq data, the second colomn (library or flowcell code) should always be unique.
	3. All the paths need to be absolute path

Example 
	To be done
USAGE
}


#	PopGenome_Variant_Filtering::VARIANT_FILTERING($allcfg,$skipsh) if ($run eq 'variant_filtering');

	#############################################
	#											#
	#	Require statistics of variants	
	#											#
	#############################################

	#02.SampleFiltering
#	PopGenome_Relatedness::RELATEDNESS($allcfg,$skipsh) if ($run eq 'relatedness');

#	PopGenome_Phylogeny::PHYLOGENY($allcfg,$skipsh) if ($run eq 'phylogeny');
	
#	PopGenome_Admixture::ADMIXTURE($allcfg,$skipsh) if ($run eq 'admixture');

#	PopGenome_Homozygosity::HOMOZYGOSITY($allcfg,$skipsh) if ($run eq 'step4_homozygosity');

#	PopGenome_ROH::ROH($allcfg,$skipsh) if ($run eq 'roh');

#	PopGenome_LD::LD($allcfg,$skipsh) if ($run eq 'ld');

	#05.IntraPopulation
#	PopGenome_Slidingwindow::SLIDINGWINDOW($allcfg,$skipsh) if ($run eq 'slidingwindow');

#	PopGenome_SFS::SFS($allcfg,$skipsh) if ($run eq 'sfs');

	#06.Selection
#	PopGenome_MKTEST::MKTEST($allcfg,$skipsh) if ($run eq 'mktest');